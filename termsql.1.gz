.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
.TH TERMSQL "1" "November 2014" "termsql 0.3alpha" "User Commands"
.SH NAME
termsql \- manual page for termsql 0.3alpha
.SH DESCRIPTION
usage: termsql [\-h] [\-1] [\-d [DELIMITER]] [\-p [SEPARATOR]]
.IP
[\-l [LINE_AS_COLUMN]] [\-k [KEY_COLUMNS]] [\-c [COLUMNS]] [\-w]
[\-H [OFFSET_HEAD]] [\-T [OFFSET_TAIL]] [\-M [MAX_ROWS]] [\-C]
[\-m [MODE]] [\-x] [\-a] [\-i [INFILE]] [\-o [OUTFILE]]
[\-q [QUERYFILE]] [\-t [TABLE]] [\-s [SQLITE]] [\-v]
[query]
.PP
Convert text into SQL table and query it
.SS "positional arguments:"
.TP
query
SQL Query string
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-1\fR, \fB\-\-head\fR
use first line/head(er) for column names
.TP
\fB\-d\fR [DELIMITER], \fB\-\-delimiter\fR [DELIMITER]
custom delimiter (default is space)
.TP
\fB\-p\fR [SEPARATOR], \fB\-\-separator\fR [SEPARATOR]
set sqlite output field separator (default is |)
.TP
\fB\-l\fR [LINE_AS_COLUMN], \fB\-\-line\-as\-column\fR [LINE_AS_COLUMN]
each line of input is a whole column, next row begins
after n lines
.TP
\fB\-k\fR [KEY_COLUMNS], \fB\-\-key\-columns\fR [KEY_COLUMNS]
one or more columns can make up the primary key (i.e
\fB\-k\fR COL0 or \fB\-c\fR name,nick \fB\-k\fR nick)
.TP
\fB\-c\fR [COLUMNS], \fB\-\-columns\fR [COLUMNS]
set custom column names (ie. \fB\-c\fR 'name,street,age')
.TP
\fB\-w\fR, \fB\-\-whitespace\fR
use whitespace as field separator (default is |)
.TP
\fB\-H\fR [OFFSET_HEAD], \fB\-\-offset\-head\fR [OFFSET_HEAD]
ignore first n lines of input
.TP
\fB\-T\fR [OFFSET_TAIL], \fB\-\-offset\-tail\fR [OFFSET_TAIL]
ignore last n lines of input
.TP
\fB\-M\fR [MAX_ROWS], \fB\-\-max\-rows\fR [MAX_ROWS]
don't insert more than n rows into database
.TP
\fB\-C\fR, \fB\-\-dump\-create\-table\fR
dump create table SQL
.TP
\fB\-m\fR [MODE], \fB\-\-mode\fR [MODE]
set sqlite output mode i.e.: csv, column, html,
insert, line, list, tabs, tcl (default is list)
.TP
\fB\-x\fR, \fB\-\-select\-all\fR
add final SELECT * FROM to user defined query
.TP
\fB\-a\fR, \fB\-\-append\fR
don't DROP TABLE instead just append data to existing
table. If the existing table doesn't have enough
columns it will be ALTERed accordingly, if possible
.TP
\fB\-i\fR [INFILE], \fB\-\-infile\fR [INFILE]
use file as input instead of stdin
.TP
\fB\-o\fR [OUTFILE], \fB\-\-outfile\fR [OUTFILE]
location/filename to use for sql database (by default
a tempfile is used)
.TP
\fB\-q\fR [QUERYFILE], \fB\-\-queryfile\fR [QUERYFILE]
load complex query from file, queries on the
commandline get executed last
.TP
\fB\-t\fR [TABLE], \fB\-\-table\fR [TABLE]
tablename (must be a valid sqlite tablename)
.TP
\fB\-s\fR [SQLITE], \fB\-\-sqlite\fR [SQLITE]
path to sqlite executable
.TP
\fB\-v\fR, \fB\-\-version\fR
display version information
.SS "examples:"
.IP
ps aux | termsql "select * from tbl where COL0='root' limit 5"
.IP
(outputs 5 processes that are running as root)
.IP
df | termsql \fB\-1\fR 'select Filesystem from tbl order by [1K\-blocks] desc limit 1'
.IP
(return the largest device)
.IP
cat \fI\,/proc/cpuinfo\/\fP | termsql "select COL2 from tbl where COL0='bogomips'"
.IP
(how many bogomips does your system have?)
.IP
termsql \fB\-\-infile\fR \fI\,/etc/group\/\fP \fB\-d\fR ':' "select COL0 from tbl"
.IP
(read from file, use : as delimiter, shows all groups in \fI\,/etc/group\/\fP)
